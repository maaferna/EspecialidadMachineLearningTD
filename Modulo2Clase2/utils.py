import os
import json

# 1. üìÇ Funci√≥n que procesa un archivo l√≠nea por l√≠nea
def procesar_archivo(ruta_archivo):
    """
    Abre un archivo de texto, intenta convertir cada l√≠nea a entero
    y calcula 100 dividido por ese valor. Maneja m√∫ltiples excepciones
    y lanza una excepci√≥n personalizada si el n√∫mero es negativo.
    """
    try:
        with open(ruta_archivo, 'r') as archivo:
            print(f"üìÑ Procesando archivo: {ruta_archivo}")
            for i, linea in enumerate(archivo, start=1):
                try:
                    valor = int(linea.strip())
                    if valor < 0:
                        raise ValorNegativoError(f"L√≠nea {i}: Se encontr√≥ un valor negativo ({valor})")
                    resultado = 100 / valor
                    print(f"L√≠nea {i}: 100 / {valor} = {resultado}")
                except ValueError:
                    print(f"‚ùå L√≠nea {i}: No es un n√∫mero v√°lido -> '{linea.strip()}'")
                except ZeroDivisionError:
                    print(f"‚ùå L√≠nea {i}: Divisi√≥n entre cero no permitida")
                except ValorNegativoError as e:
                    print(f"‚ö†Ô∏è {e}")
                else:
                    print(f"‚úÖ L√≠nea {i} procesada correctamente")
                finally:
                    print(f"üßπ L√≠nea {i}: Limpieza final\n")
    except FileNotFoundError:
        print(f"‚ùå Archivo no encontrado: {ruta_archivo}")
    else:
        print("‚úÖ Archivo procesado correctamente")
    finally:
        print("üîö Finalizando ejecuci√≥n de procesar_archivo()\n")

# 3. ‚ùó Excepci√≥n personalizada
class ValorNegativoError(Exception):
    """Excepci√≥n lanzada cuando se encuentra un valor negativo no permitido."""
    pass


